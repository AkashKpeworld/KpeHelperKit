// swift-interface-format-version: 1.0
// swift-compiler-version: Apple Swift version 5.10 (swiftlang-5.10.0.13 clang-1500.3.9.4)
// swift-module-flags: -target x86_64-apple-ios15.0-simulator -enable-objc-interop -enable-library-evolution -swift-version 5 -enforce-exclusivity=checked -O -enable-bare-slash-regex -module-name KpeAdMobKit
import Foundation
@_exported import GoogleMobileAds
@_exported import KpeAdMobKit
import Swift
import SwiftUI
import UIKit
import _Concurrency
import _StringProcessing
import _SwiftConcurrencyShims
@objc @_inheritsConvenienceInitializers final public class Native : ObjectiveC.NSObject {
  public static let shared: KpeAdMobKit.Native
  final public var didLoadAd: (() -> Swift.Void)?
  final public func getNextAd() -> GoogleMobileAds.GADNativeAd?
  final public func loadAd(didFail: (() -> Swift.Void)? = nil)
  @objc override dynamic public init()
  @objc deinit
}
extension KpeAdMobKit.Native : GoogleMobileAds.GADNativeAdLoaderDelegate {
  @objc final public func adLoader(_ adLoader: GoogleMobileAds.GADAdLoader, didReceive nativeAd: GoogleMobileAds.GADNativeAd)
  @objc final public func adLoader(_ adLoader: GoogleMobileAds.GADAdLoader, didFailToReceiveAdWithError error: any Swift.Error)
}
@objc @_inheritsConvenienceInitializers @IBDesignable @_Concurrency.MainActor(unsafe) public class GradientButton : UIKit.UIButton {
  @_Concurrency.MainActor(unsafe) @objc override dynamic public class var layerClass: Swift.AnyClass {
    @objc get
  }
  @_Concurrency.MainActor(unsafe) @objc override dynamic public func traitCollectionDidChange(_ previousTraitCollection: UIKit.UITraitCollection?)
  @_Concurrency.MainActor(unsafe) @objc override dynamic public init(frame: CoreFoundation.CGRect)
  @_Concurrency.MainActor(unsafe) @objc required dynamic public init?(coder: Foundation.NSCoder)
  @objc deinit
}
@objc @_inheritsConvenienceInitializers @_hasMissingDesignatedInitializers final public class Inter : ObjectiveC.NSObject {
  public static let shared: KpeAdMobKit.Inter
  final public func load(onLoad: (() -> Swift.Void)? = nil)
  final public func presentAd(onDismiss: @escaping () -> Swift.Void)
  @objc deinit
}
extension KpeAdMobKit.Inter : GoogleMobileAds.GADFullScreenContentDelegate {
  @objc final public func ad(_ ad: any GoogleMobileAds.GADFullScreenPresentingAd, didFailToPresentFullScreenContentWithError error: any Swift.Error)
  @objc final public func adDidDismissFullScreenContent(_ ad: any GoogleMobileAds.GADFullScreenPresentingAd)
}
@objc @_inheritsConvenienceInitializers @_hasMissingDesignatedInitializers final public class SplashAppOpen : ObjectiveC.NSObject {
  public static let shared: KpeAdMobKit.SplashAppOpen
  final public func load(onLoad: @escaping () -> Swift.Void)
  @objc deinit
}
extension KpeAdMobKit.SplashAppOpen : GoogleMobileAds.GADFullScreenContentDelegate {
  @objc final public func ad(_ ad: any GoogleMobileAds.GADFullScreenPresentingAd, didFailToPresentFullScreenContentWithError error: any Swift.Error)
  @objc final public func adDidDismissFullScreenContent(_ ad: any GoogleMobileAds.GADFullScreenPresentingAd)
}
@objc @_inheritsConvenienceInitializers @_hasMissingDesignatedInitializers final public class ForegroundAppOpen : ObjectiveC.NSObject {
  public static let shared: KpeAdMobKit.ForegroundAppOpen
  final public func startAd()
  final public func tryToPresentAd()
  @objc deinit
}
extension KpeAdMobKit.ForegroundAppOpen : GoogleMobileAds.GADFullScreenContentDelegate {
  @objc final public func ad(_ ad: any GoogleMobileAds.GADFullScreenPresentingAd, didFailToPresentFullScreenContentWithError error: any Swift.Error)
  @objc final public func adDidDismissFullScreenContent(_ ad: any GoogleMobileAds.GADFullScreenPresentingAd)
}
public var native_show_count: Swift.Int
public var interShowCount: Swift.Int
public var interAdCounter: Swift.Int
public var nativAdCounter: Swift.Int
public var isAdShow: Swift.Bool
@objc @_inheritsConvenienceInitializers @_hasMissingDesignatedInitializers @_Concurrency.MainActor(unsafe) final public class NativeAdView : UIKit.UIView {
  @_Concurrency.MainActor(unsafe) final public func setAdView(_ view: GoogleMobileAds.GADNativeAd)
  @objc deinit
}
